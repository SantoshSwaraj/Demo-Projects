package aisaac.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;

import aisaac.utils.IsoDateSerializer;
import lombok.Getter;
import lombok.Setter;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user")
public class User implements java.io.Serializable {

 public User() {}

  public User(String username) {
    this.username = username;
  }
  
  public User(Integer userId) {
		super();
		this.userId = userId;
	}

  @Id
  @Setter
  @Getter
  @GeneratedValue(strategy = IDENTITY)
  @Column(name = "user_id", unique = true, nullable = false)
  private Integer userId;

  @Setter
  @Getter
  @Column(name = "username", nullable = false, length = 50)
  private String username;

  @Setter
  @Getter
  @Column(name = "password")
  private String password;

  @Setter
  @Getter
  @Column(name = "display_name")
  private String displayName;
  
  @Setter
  @Getter
  @JsonSerialize(using = IsoDateSerializer.class)
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "created_date", length = 19)
  private Date createdDate;

  @Setter
  @Getter
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "updated_date", length = 19)
  private Date updatedDate;

  @Setter
  @Getter
  @Column(name = "mail_token")
  private String mailToken;

  @Setter
  @Getter
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "mail_sent_time", length = 19)
  private Date mailSentTime;
  
  
  @Setter
  @Getter
  @Column(name = "activation_mail_count")
  private Integer activationMailCount;
  
  @Setter
  @Getter
  @Column(name = "otp_count")
  private Integer otpCount;
  
  @Setter
  @Getter
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "otp_mail_sent_time", length = 19)
  private Date otpMailSentTime;

  @Setter
  @Getter
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "last_login", length = 19)
  private Date lastLogin;

  @Setter
  @Getter
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "login_attempt_time", length = 19)
  private Date loginAttemptTime;

  @Setter
  @Getter
  @Column(name = "login_attempt_count")
  private Integer loginAttemptCount;
  
  @Setter
  @Getter
  @Column(name = "mobile_no")
  private String mobileNo;
  
  @Setter
  @Getter
  @Column(name = "get_sms", nullable = false)
  private boolean getSms;
  
  @Setter
  @Getter
  @Column(name = "get_email", nullable = false)
  private boolean getEmail;
  
  @Setter
  @Getter
  @Column(name = "user_salt")
  private String userSalt;
  
  @Setter
  @Getter
  @Column(name = "two_factor_auth", nullable = false)
  private boolean twoFactorAuth;
  
  //for auto_remediation column in user table
  @Setter
  @Getter
  @Column(name = "auto_remediation", nullable = false)
  private boolean autoRemediation;
  
  //for ad auth is enable column in user table
  @Setter
  @Getter
  @Column(name = "is_ad_user", nullable = false)
  private boolean adUserAuth;
  
  //for ad username column in user table
  @Setter
  @Getter
  @Column(name = "ad_username", length = 50)
  private String adUsername;
  
  @Setter
  @Getter
  @Column(name = "country_name")
  private String countryName;
  
  @Setter
  @Getter
  @Column(name = "country_isd_code")
  private String countryIsdCode;
  
  @Setter
  @Getter
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "password_last_updated", length = 19)
  private Date passwordLastUpdated;
  
  @Setter
  @Getter
  @Column(name = "is_paladion_user")
  private boolean paladionUser;
  
  @Setter
  @Getter
  @Column(name = "display_role")
  private String displayRole;
  
  @Setter
  @Getter
  @Column(name = "is_portal_user")
  private boolean portalUser;
    
  @Getter
  @Setter
  @Column(name = "is_deleted", nullable = false)
  private boolean deleted;
  
  @Getter
  @Setter
  @Column(name = "generate_soc_reports", nullable = false)
  private boolean generateSocReports;
  
  @Setter
  @Getter
  @Column(name = "created_by")
  private Integer createdBy;
  
  @Setter
  @Getter
  @Column(name = "updated_by")
  private Integer updatedBy;
  
  @Setter
  @Getter
  @Column(name = "is_azure_ad_user", nullable = false)
  private boolean azureAdUserAuth;
  
  @Setter
  @Getter
  @Column(name = "azure_ad_user_name", length = 50)
  private String azureAdUsername;
  
  @Setter
  @Getter
  @Column(name = "user_status", length = 11)
  private Integer userStatus;
  
  @Setter
  @Getter
  @Column(name = "timezone_display_preference", length = 50)
  private String timezoneDisplayPreference;
  
  @Setter
  @Getter
  @Column(name = "datetime_display_preference", length = 50)
  private String datetimeDisplayPreference;

}
